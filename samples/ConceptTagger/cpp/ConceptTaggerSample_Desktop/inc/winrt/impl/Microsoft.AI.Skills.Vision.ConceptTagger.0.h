// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.190111.3

#pragma once

WINRT_EXPORT namespace winrt::Microsoft::AI::Skills::SkillInterface {

struct ISkill;
struct ISkillBinding;
struct ISkillDescriptor;
struct ISkillExecutionDevice;
struct ISkillFeature;
struct ISkillFeatureDescriptor;
struct SkillInformation;

}

WINRT_EXPORT namespace winrt::Windows::Media {

struct VideoFrame;

}

WINRT_EXPORT namespace winrt::Microsoft::AI::Skills::SkillInterface {

struct ISkill;
struct ISkillBinding;
struct ISkillDescriptor;

}

WINRT_EXPORT namespace winrt::Microsoft::AI::Skills::Vision::ConceptTagger {

struct IConceptTagScore;
struct IConceptTaggerBinding;
struct ConceptTagScore;
struct ConceptTaggerBinding;
struct ConceptTaggerDescriptor;
struct ConceptTaggerSkill;

}

namespace winrt::impl {

template <> struct category<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTagScore>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTaggerBinding>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTagScore>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerBinding>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerDescriptor>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerSkill>{ using type = class_category; };
template <> struct name<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTagScore>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ConceptTagger.IConceptTagScore" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTaggerBinding>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ConceptTagger.IConceptTaggerBinding" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTagScore>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ConceptTagger.ConceptTagScore" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerBinding>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ConceptTagger.ConceptTaggerBinding" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerDescriptor>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ConceptTagger.ConceptTaggerDescriptor" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerSkill>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ConceptTagger.ConceptTaggerSkill" }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTagScore>{ static constexpr guid value{ 0xFB100B33,0x03FE,0x5DA9,{ 0xA3,0xA3,0xBA,0x02,0xB0,0xB4,0xD6,0xFF } }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTaggerBinding>{ static constexpr guid value{ 0xC6018242,0x9268,0x5FA5,{ 0xAC,0x03,0xD5,0x42,0x25,0x3E,0x5F,0x47 } }; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTagScore>{ using type = Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTagScore; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerBinding>{ using type = Microsoft::AI::Skills::SkillInterface::ISkillBinding; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerDescriptor>{ using type = Microsoft::AI::Skills::SkillInterface::ISkillDescriptor; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTaggerSkill>{ using type = Microsoft::AI::Skills::SkillInterface::ISkill; };

template <> struct abi<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTagScore>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Name(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Score(float* value) noexcept = 0;
};};

template <> struct abi<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTaggerBinding>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL SetInputImageAsync(void* videoFrame, void** operation) noexcept = 0;
    virtual int32_t WINRT_CALL GetTopXTagsAboveThreshold(int32_t desiredTopCount, float threshold, void** result) noexcept = 0;
};};

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ConceptTagger_IConceptTagScore
{
    hstring Name() const;
    float Score() const;
};
template <> struct consume<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTagScore> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ConceptTagger_IConceptTagScore<D>; };

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ConceptTagger_IConceptTaggerBinding
{
    Windows::Foundation::IAsyncAction SetInputImageAsync(Windows::Media::VideoFrame const& videoFrame) const;
    Windows::Foundation::Collections::IVectorView<Microsoft::AI::Skills::Vision::ConceptTagger::ConceptTagScore> GetTopXTagsAboveThreshold(int32_t desiredTopCount, float threshold) const;
};
template <> struct consume<Microsoft::AI::Skills::Vision::ConceptTagger::IConceptTaggerBinding> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ConceptTagger_IConceptTaggerBinding<D>; };

}
